import type { fileLoggerOptions } from "./interface.js";
/**
 * Logger class
 */
export default class Logger {
    #private;
    private stdout;
    private encoder;
    private writer?;
    private rotate;
    private dir?;
    private format;
    /**
     * Log message with info level
     * @param args data to log
     */
    info(...args: unknown[]): Promise<void>;
    /**
     * Log message with warning level
     * @param args data to log
     */
    warn(...args: unknown[]): Promise<void>;
    /**
     * Log message with error level
     * @param args data to log
     */
    error(...args: unknown[]): Promise<void>;
    private write;
    /**
     * init file logger
     * @param dir
     * @param options
     */
    initFileLogger(dir: string, options?: fileLoggerOptions): Promise<void>;
    /**
     * disable a specific type of logger
     * @param type Level of logger to disable
     */
    disable(type?: "info" | "warn" | "error"): void;
    /**
     * Enable a specific type of logger
     * @param type Level of logger to enable
     */
    enable(type?: "info" | "warn" | "error"): void;
    /**
     * Disable console logger
     */
    disableConsole(): void;
    /**
     * Enable console logger
     */
    enableConsole(): void;
    /**
     * Disable file logger
     */
    disableFile(): void;
    /**
     * Enable file logger
     */
    enableFile(): void;
    private getInfo;
    private getWarn;
    private getError;
    private getNow;
    private getDate;
}
//# sourceMappingURL=logger.d.ts.map